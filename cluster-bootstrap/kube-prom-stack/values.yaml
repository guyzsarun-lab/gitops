kube-prometheus-stack:
  grafana:
    adminPassword: password
    assertNoLeakedSecrets: false
    resources:
      limits:
        cpu: 100m
        memory: 512Mi
    persistence:
      type: pvc
      enabled: true
      existingClaim: grafana-pvc
      accessModes:
        - ReadWriteOnce
      size: 5Gi
    initChownData:
      enabled: false

    sidecar:
      resources:
        limits:
          cpu: 50m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 50Mi

    grafana.ini:
      server:
        root_url: https://k8s.proxmox.local/grafana
        serve_from_sub_path: true
      panels:
        enable_alpha: true
      security:
        allow_embedding: true
      auth.generic_oauth:
          enabled : true
          name : Keycloak-OIDC
          client_id : grafana-client
          client_secret : 5pphI67RZcQEEcQv73R3TwBw1Ym6GNGv
          scopes : openid email profile offline_access roles
          email_attribute_path : email
          login_attribute_path : username
          name_attribute_path : full_name
          auth_url : https://k8s.proxmox.local/keycloak/realms/oidc/protocol/openid-connect/auth
          token_url : https://k8s.proxmox.local/keycloak/realms/oidc/protocol/openid-connect/token
          api_url :  https://k8s.proxmox.local/keycloak/realms/oidc/protocol/openid-connect/userinfo
          tls_skip_verify_insecure: true
          allow_assign_grafana_admin : true
          role_attribute_path : contains(realm_access.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(realm_access.roles[*], 'admin') && 'Admin' || contains(realm_access.roles[*], 'editor') && 'Editor' || 'Viewer'

  prometheusOperator:
    prometheusConfigReloader:
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
        limits:
          cpu: 50m
          memory: 50Mi

  prometheus:
    prometheusSpec:
      routePrefix: /prometheus
      retention: 7d
      scrapeInterval: "120s"
      resources:
        limits:
          cpu: 200m
          memory: 1G
        requests:
          cpu: 10m
          memory: 50Mi

      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: nfs-client
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi

      additionalScrapeConfigs:
        - job_name: 'proxmox-ve'
          static_configs:
            - targets:
              - 10.243.100.160:9100

        - job_name: 'node-exporter'
          static_configs:
            - targets:
              - 172.16.0.3:9100
              labels:
                instance: 'ubuntu-jumphost'
            - targets:
              - 172.16.0.4:9100
              labels:
                instance: 'nas-server'
            - targets:
              - 172.16.0.13:9100
              labels:
                instance: 'app-server'
            - targets:
              - 10.243.199.158:9100
              labels:
                instance: 'pi4'

        - job_name: 'kong-gateway'
          static_configs:
            - targets: ['gateway.proxmox.local:8001']
        - job_name: 'istiod'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istiod;http-monitoring
        - job_name: 'envoy-stats'
          metrics_path: /stats/prometheus
          kubernetes_sd_configs:
          - role: pod

          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom'

        - job_name: postgres
          static_configs:
            - targets: ["172.16.0.3:9187"]

  alertmanager:
    enabled: false

  kubeProxy:
    enabled: true
    serviceMonitor:
      enabled: false

